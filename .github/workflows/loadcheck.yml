name: "Cog load test"

on: workflow_dispatch

jobs:
  loadcheck:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
        red-version:
          # this workflow required pr #5453 commit d27dbde, which is in dev 3.4 & 3.5 & pypi 3.4.15+
          - "git+https://github.com/Cog-Creators/Red-DiscordBot@3.4#egg=Red-DiscordBot"
          - "git+https://github.com/Cog-Creators/Red-DiscordBot@V3/develop#egg=Red-DiscordBot"
          - "Red-DiscordBot==3.4.16"
        include:
          - red-version: "git+https://github.com/Cog-Creators/Red-DiscordBot@3.4#egg=Red-DiscordBot"
            friendly-red: "Red 3.4 (dev version)"
          - red-version: "git+https://github.com/Cog-Creators/Red-DiscordBot@V3/develop#egg=Red-DiscordBot"
            friendly-red: "Red 3.5 (dev version)"
          - red-version: "Red-DiscordBot==3.4.16"
            friendly-red: "Red 3.4.16"
      fail-fast: false

    name: Cog load test - Python ${{ matrix.python-version }} & ${{ matrix.friendly-red }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ matrix.red-version }}-${{ matrix.python-version }}-${{ hashFiles('dev-requirements.txt') }}-${{ secrets.CACHE_V }}

      - name: Maybe make venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install setuptools wheel
          pip install ${{ matrix.red-version }}
          pip install -r dev-requirements.txt
          pip install python-dotenv jsonrpc-websocket

      - name: Prepare files
        run: |
          mkdir -p /home/runner/.config/Red-DiscordBot
          echo '{"workflow": {"DATA_PATH": "/home/runner/work/AAA3A-cogs/AAA3A-cogs/.github/red_data", "COG_PATH_APPEND": "cogs", "CORE_PATH_APPEND": "core", "STORAGE_TYPE": "JSON", "STORAGE_DETAILS": {}}}' > /home/runner/.config/Red-DiscordBot/config.json

      - name: Run script loadcheck.py
        run: |
          source .venv/bin/activate
          python .github/workflows/scripts/loadcheck.py
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_TEST_BOT }}

      - name: Save Red output as Artifact
        if: always() # still run if prev step failed
        uses: actions/upload-artifact@v2
        with:
          name: "Red log - Python ${{ matrix.python-version }} & ${{ matrix.friendly-red }}"
          path: red.log
