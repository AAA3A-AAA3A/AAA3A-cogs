#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-06 11:38+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: redgettext 3.4.2\n"

#: cogsutils.py:42
#, docstring
msgid ""
"\n"
"    Slimmed down version of rich_markup which ensure no colours (/ANSI) can exist\n"
"    https://github.com/Cog-Creators/Red-DiscordBot/pull/5538/files (Kowlin)\n"
"    "
msgstr ""

#: cogsutils.py:56
#, docstring
msgid "Tools for AAA3A-cogs!"
msgstr ""

#: cogsutils.py:141
#, docstring
msgid ""
"\n"
"        Returns True if the current redbot instance is running under dpy2.\n"
"        "
msgstr ""

#: cogsutils.py:147
#, docstring
msgid "Thanks Simbad!"
msgstr ""

#: cogsutils.py:153
#, docstring
msgid "Nothing to delete"
msgstr ""

#: cogsutils.py:163
#, docstring
msgid ""
"\n"
"        Load a cog by checking whether the required function is awaitable or not.\n"
"        "
msgstr ""

#: cogsutils.py:176
#, docstring
msgid ""
"\n"
"        Adding additional functionality to the cog.\n"
"        "
msgstr ""

#: cogsutils.py:196
#, docstring
msgid ""
"\n"
"        Adds dev environment values, slash commands add Views.\n"
"        "
msgstr ""

#: cogsutils.py:225
#, docstring
msgid ""
"\n"
"        Removes dev environment values, slash commands add Views.\n"
"        "
msgstr ""

#: cogsutils.py:260
#, docstring
msgid ""
"\n"
"        If the bot owner is X, then add several values to the development environment, if they don't already exist.\n"
"        Even checks the id of the bot owner in the variable of my Sudo cog, if it is installed and loaded.\n"
"        "
msgstr ""

#: cogsutils.py:313
#, docstring
msgid ""
"\n"
"        If the bot owner is X, then remove several values to the development environment, if they don't already exist.\n"
"        Even checks the id of the bot owner in the variable of my Sudo cog, if it is installed and loaded.\n"
"        "
msgstr ""

#: cogsutils.py:333
#, docstring
msgid ""
"\n"
"        Record all exceptions generated by commands by cog and by command in `bot.last_exceptions_cogs`.\n"
"        All my cogs will add this listener if it doesn't exist, so I need to record this in a common variable. Also, this may be useful to others.\n"
"        "
msgstr ""

#: cogsutils.py:395
#, docstring
msgid ""
"\n"
"        Allow confirmation to be requested from the user, in the form of buttons/dropdown/reactions/message, with many additional options.\n"
"        "
msgstr ""

#: cogsutils.py:403
msgid ""
"To confirm the current action, please use the buttons below this message."
msgstr ""

#: cogsutils.py:405
msgid ""
"To confirm the current action, please use the dropdown below this message."
msgstr ""

#: cogsutils.py:407
msgid ""
"To confirm the current action, please use the reactions below this message."
msgstr ""

#: cogsutils.py:409
msgid "To confirm the current action, please send yes/no in this channel."
msgstr ""

#: cogsutils.py:514
#, docstring
msgid ""
"\n"
"        Generate a Discord timestamp from a datetime object.\n"
"        <t:TIMESTAMP:FORMAT>\n"
"        Parameters\n"
"        ----------\n"
"        dt : datetime.datetime\n"
"            The datetime object to use\n"
"        format : TimestampFormat, by default `f`\n"
"            The format to pass to Discord.\n"
"            - `f` short date time | `18 June 2021 02:50`\n"
"            - `F` long date time  | `Friday, 18 June 2021 02:50`\n"
"            - `d` short date      | `18/06/2021`\n"
"            - `D` long date       | `18 June 2021`\n"
"            - `t` short time      | `02:50`\n"
"            - `T` long time       | `02:50:15`\n"
"            - `R` relative time   | `8 days ago`\n"
"        Returns\n"
"        -------\n"
"        str\n"
"            Formatted timestamp\n"
"        Thanks to vexutils from Vexed01 in GitHub! (https://github.com/Vexed01/Vex-Cogs/blob/master/timechannel/vexutils/chat.py)\n"
"        "
msgstr ""

#: cogsutils.py:540
#, docstring
msgid ""
"\n"
"        Create a discord.Webhook object. It tries to retrieve an existing webhook created by the bot or to create it itself.\n"
"        "
msgstr ""

#: cogsutils.py:557
#, docstring
msgid ""
"\n"
"        Check all permissions specified as an argument.\n"
"        "
msgstr ""

#: cogsutils.py:579
#, docstring
msgid ""
"\n"
"        Create a loop like Loop, but with default values and loop object recording functionality.\n"
"        "
msgstr ""

#: cogsutils.py:593
#, docstring
msgid ""
"\n"
"        Create a Captcha challenge like Captcha, but with default values.\n"
"        "
msgstr ""

#: cogsutils.py:599
#, docstring
msgid ""
"\n"
"        Get a dictionary containing the objects or None of all my cogs.\n"
"        "
msgstr ""

#: cogsutils.py:612
#, docstring
msgid ""
"\n"
"        Return True if at least one cog of all my cogs is loaded.\n"
"        "
msgstr ""

#: cogsutils.py:623
#, docstring
msgid ""
"\n"
"        Add values to the development environment for all my loaded cogs. Not really useful anymore, now that my cogs use AAA3A_utils.\n"
"        "
msgstr ""

#: cogsutils.py:635
#, docstring
msgid ""
"\n"
"        Convert a class instance into a dictionary, while using ids for all sub-attributes.\n"
"        "
msgstr ""

#: cogsutils.py:643
#, docstring
msgid ""
"\n"
"        Return a dict with ids for all sub-attributes\n"
"        "
msgstr ""

#: cogsutils.py:659
#, docstring
msgid ""
"\n"
"        Generate a secret key, with the choice of characters, the number of characters and a list of existing keys.\n"
"        "
msgstr ""

#: cogsutils.py:685
#, docstring
msgid ""
"\n"
"        Allow to use an asynchronous function, from a non-asynchronous function.\n"
"        "
msgstr ""

#: cogsutils.py:699
#, docstring
msgid ""
"\n"
"        Delete a message, ignoring any exceptions.\n"
"        Easier than putting these 3 lines at each message deletion for each cog.\n"
"        "
msgstr ""

#: cogsutils.py:709
#, docstring
msgid ""
"\n"
"        Check all parameters for the output of any listener.\n"
"        Thanks to Jack! (https://discord.com/channels/133049272517001216/160386989819035648/825373605000511518)\n"
"        "
msgstr ""

#: cogsutils.py:769
#, docstring
msgid ""
"\n"
"        Cog self-destruct.\n"
"        Will of course never be used, just a test.\n"
"        "
msgstr ""

#: cogsutils.py:783
msgid "The cog downloader is not loaded."
msgstr ""

#: cogsutils.py:789
#, docstring
msgid ""
"\n"
"    Create a loop, with many features.\n"
"    Thanks to Vexed01 on GitHub! (https://github.com/Vexed01/Vex-Cogs/blob/master/timechannel/loop.py)\n"
"    "
msgstr ""

#: cogsutils.py:921
#, docstring
msgid ""
"\n"
"        If the loop is running on time (whether or not next expected iteration is in the future)\n"
"        "
msgstr ""

#: cogsutils.py:930
#, docstring
msgid ""
"\n"
"        Positive float with the seconds until the next iteration, based off the last\n"
"        iteration and the interval.\n"
"        If the expected time of the next iteration is in the past, this will return `0.0`\n"
"        "
msgstr ""

#: cogsutils.py:947
#, docstring
msgid ""
"Sleep until the next iteration. Basically an \"all-in-one\" version of "
"`until_next`."
msgstr ""

#: cogsutils.py:951
#, docstring
msgid "Register an iteration as starting."
msgstr ""

#: cogsutils.py:959
#, docstring
msgid "Register an iteration as finished successfully."
msgstr ""

#: cogsutils.py:964
#, docstring
msgid "Register an iteration's error."
msgstr ""

#: cogsutils.py:972
#, docstring
msgid "Get an embed with infomation on this loop."
msgstr ""

#: cogsutils.py:1009
#, docstring
msgid ""
"\n"
"    Captcha for an member in a text channel.\n"
"    Thanks to Kreusada for this code! (https://github.com/Kreusada/Kreusada-Cogs/blob/master/captcha/)\n"
"    "
msgstr ""

#: cogsutils.py:1081
#, docstring
msgid ""
"Do challenging in one function!\n"
"        "
msgstr ""

#: cogsutils.py:1098
msgid "Code invalid. Do not copy and paste."
msgstr ""

#: cogsutils.py:1120
#, docstring
msgid ""
"\n"
"        Get the embed containing the captcha code.\n"
"        "
msgstr ""

#: cogsutils.py:1126
msgid "Captcha"
msgstr ""

#: cogsutils.py:1126
msgid " for {self.why}"
msgstr ""

#: cogsutils.py:1127
msgid ""
"Please return me the following code:\n"
"{box(str(self.code))}\n"
"Do not copy and paste."
msgstr ""

#: cogsutils.py:1133
msgid "Tries: {self.trynum} / Limit: {self.limit}"
msgstr ""

#: cogsutils.py:1142
#, docstring
msgid ""
"\n"
"        Send a message with new code.\n"
"        "
msgstr ""

#: cogsutils.py:1164
#, docstring
msgid "Verify a code."
msgstr ""

#: cogsutils.py:1173
#, docstring
msgid ""
"Wait for an action from the user.\n"
"        It will return an object of discord.Message or discord.Reaction depending what the user\n"
"        did.\n"
"        "
msgstr ""

#: cogsutils.py:1193
#, docstring
msgid "Cancel the ongoing tasks."
msgstr ""

#: cogsutils.py:1241
#, docstring
msgid "Create Buttons easily."
msgstr ""

#: cogsutils.py:1244
#, docstring
msgid ""
"style: ButtonStyle, label: Optional[str], disabled: bool, custom_id: "
"Optional[str], url: Optional[str], emoji: Optional[Union[str, Emoji, "
"PartialEmoji]], row: Optional[int]"
msgstr ""

#: cogsutils.py:1315
#, docstring
msgid "Create Dropdown easily."
msgstr ""

#: cogsutils.py:1318
#, docstring
msgid ""
"label: str, value: str, description: Optional[str], emoji: "
"Optional[Union[str, Emoji, PartialEmoji]], default: bool"
msgstr ""

#: cogsutils.py:1391
#, docstring
msgid "Create Modal easily."
msgstr ""

#: cogsutils.py:1394
#, docstring
msgid ""
"name: str, label: str, style: TextStyle, custom_id: str, placeholder: "
"Optional[str], default: Optional[str], required: bool, min_length: "
"Optional[int], max_length: Optional[int], row: Optional[int]"
msgstr ""

#: cogsutils.py:1464
#, docstring
msgid "Create Reactions easily."
msgstr ""

#: cogsutils.py:1565
#, docstring
msgid "Create Menus easily."
msgstr ""

#: cogsutils.py:1591
#, docstring
msgid ""
"\n"
"        Used to start the menu displaying the first page requested.\n"
"        Parameters\n"
"        ----------\n"
"            ctx: `commands.Context`\n"
"                The context to start the menu in.\n"
"        "
msgstr ""

#: cogsutils.py:1699
#, docstring
msgid ""
"Get all the necessary information to get support on a bot/repo/cog/command.\n"
"    With a html file.\n"
"    "
msgstr ""

#: cogsutils.py:1722
msgid "The command `{command}` does not exist."
msgstr ""

#: cogsutils.py:1727
msgid ""
"The cog downloader is not loaded. I can't continue. Do you want me to do it?"
msgstr ""

#: cogsutils.py:1737 cogsutils.py:1747
msgid "Repo by the name `{rp}` does not exist."
msgstr ""

#: cogsutils.py:1867
msgid "All checks passed and no issues were detected."
msgstr ""

#: cogsutils.py:1869
msgid "The bot has been able to identify the issue."
msgstr ""

#: cogsutils.py:1872
msgid "Detected issue: "
msgstr ""

#: cogsutils.py:1874
msgid "Solution: "
msgstr ""
